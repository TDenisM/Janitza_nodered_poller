"use strict";module.exports=function(t){require("source-map-support").install();var i=require("./modbus-basics"),r=require("./core/modbus-core"),a=require("./core/modbus-io-core"),u=require("debug")("contribModbus:getter");t.nodes.registerType("modbus-getter",function(e){t.nodes.createNode(this,e),this.name=e.name,this.unitid=e.unitid,this.dataType=e.dataType,this.adr=e.adr,this.quantity=e.quantity,this.showStatusActivities=e.showStatusActivities,this.showErrors=e.showErrors,this.msgThruput=e.msgThruput,this.connection=null,this.useIOFile=e.useIOFile,this.ioFile=t.nodes.getNode(e.ioFile),this.useIOForPayload=e.useIOForPayload,this.logIOActivities=e.logIOActivities,this.emptyMsgOnFail=e.emptyMsgOnFail,this.keepMsgProperties=e.keepMsgProperties,this.internalDebugLog=u,this.verboseLogging=t.settings.verbose;var s=this;s.bufferMessageList=new Map,i.setNodeStatusTo("waiting",s);var o=t.nodes.getNode(e.server);o&&(o.registerForModbus(s),i.initModbusClientEvents(s,o),s.onModbusCommandDone=function(e,t){s.showStatusActivities&&i.setNodeStatusTo("reading done",s),s.send(a.buildMessageWithIO(s,e.data,e,t)),s.emit("modbusGetterNodeDone")},s.errorProtocolMsg=function(e,t){i.logMsgError(s,e,t),i.sendEmptyMsgOnFail(s,e,t)},s.onModbusCommandError=function(e,t){s.internalDebugLog(e.message);t=r.getOriginalMessage(s.bufferMessageList,t);s.errorProtocolMsg(e,t),i.setModbusError(s,o,e,t),s.emit("modbusGetterNodeError")},s.buildNewMessageObject=function(e,t){var s=r.getObjectId();return{topic:t.topic||e.id,messageId:s,payload:{value:t.payload.value||t.payload,unitid:e.unitid,fc:r.functionCodeModbusRead(e.dataType),address:e.adr,quantity:e.quantity,messageId:s}}},s.on("input",function(t){if(!i.invalidPayloadIn(t)&&o.client){t=Object.assign({},t);try{var e=s.buildNewMessageObject(s,t);s.bufferMessageList.set(e.messageId,i.buildNewMessage(s.keepMsgProperties,t,e)),o.emit("readModbus",e,s.onModbusCommandDone,s.onModbusCommandError),s.showStatusActivities&&i.setNodeStatusTo(o.actualServiceState,s)}catch(e){s.errorProtocolMsg(e,t)}}}),s.on("close",function(e){i.setNodeStatusTo("closed",s),s.bufferMessageList.clear(),o.deregisterForModbus(s.id,e)}),s.showStatusActivities||i.setNodeDefaultStatus(s))})};
//# sourceMappingURL=maps/modbus-getter.js.map
