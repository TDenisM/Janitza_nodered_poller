"use strict";module.exports=function(t){require("source-map-support").install();var i=require("./modbus-basics"),o=require("./core/modbus-core"),s=require("debug")("contribModbus:write");t.nodes.registerType("modbus-write",function(e){t.nodes.createNode(this,e),this.name=e.name,this.showStatusActivities=e.showStatusActivities,this.showErrors=e.showErrors,this.unitid=e.unitid,this.dataType=e.dataType,this.adr=Number(e.adr),this.quantity=e.quantity,this.emptyMsgOnFail=e.emptyMsgOnFail,this.keepMsgProperties=e.keepMsgProperties,this.internalDebugLog=s,this.verboseLogging=t.settings.verbose;var a=this;a.bufferMessageList=new Map,i.setNodeStatusTo("waiting",a);var r=t.nodes.getNode(e.server);r&&(r.registerForModbus(a),i.initModbusClientEvents(a,r),a.onModbusWriteDone=function(e,t){a.showStatusActivities&&i.setNodeStatusTo("write done",a),a.send(o.buildMessage(a.bufferMessageList,t.payload,e,t)),a.emit("modbusWriteNodeDone")},a.errorProtocolMsg=function(e,t){i.logMsgError(a,e,t),i.sendEmptyMsgOnFail(a,e,t)},a.onModbusWriteError=function(e,t){a.internalDebugLog(e.message);t=o.getOriginalMessage(a.bufferMessageList,t);a.errorProtocolMsg(e,t),i.setModbusError(a,r,e,t),a.emit("modbusWriteNodeError")},a.setMsgPayloadFromHTTPRequests=function(e){return Object.prototype.hasOwnProperty.call(e.payload,"value")&&"string"==typeof e.payload.value&&("true"===e.payload.value||"false"===e.payload.value?e.payload.value="true"===e.payload.value:-1<e.payload.value.indexOf(",")&&(e.payload.value=JSON.parse(e.payload.value))),e},a.buildNewMessageObject=function(e,t){var s=o.getObjectId();return{topic:t.topic||e.id,messageId:s,payload:{value:Object.prototype.hasOwnProperty.call(t.payload,"value")?t.payload.value:t.payload,unitid:e.unitid,fc:o.functionCodeModbusWrite(e.dataType),address:e.adr,quantity:e.quantity,messageId:s}}},a.on("input",function(e){var t=Object.assign({},e);if(!i.invalidPayloadIn(e)&&r.client)try{var s=a.setMsgPayloadFromHTTPRequests(t),o=a.buildNewMessageObject(a,s);a.bufferMessageList.set(o.messageId,i.buildNewMessage(a.keepMsgProperties,s,o)),r.emit("writeModbus",o,a.onModbusWriteDone,a.onModbusWriteError),a.showStatusActivities&&i.setNodeStatusTo(r.actualServiceState,a)}catch(e){a.errorProtocolMsg(e,t)}}),a.on("close",function(e){i.setNodeStatusTo("closed",a),a.bufferMessageList.clear(),r.deregisterForModbus(a.id,e)}),a.showStatusActivities||i.setNodeDefaultStatus(a))})};
//# sourceMappingURL=maps/modbus-write.js.map
